{"version":3,"sources":["components/Masonry.tsx","components/Loader.tsx","features/data/enums.tsx","components/Dropdown.tsx","components/Toggle.tsx","services/api.js","features/data/dataSlice.tsx","features/data/Toolbar.tsx","components/Tile.tsx","components/TileVP.tsx","pages/Home.tsx","pages/Image.tsx","App.js","serviceWorker.ts","app/store.js","index.tsx"],"names":["Masonry","React","memo","props","columnWrapper","result","i","columns","children","length","columnIndex","push","key","style","marginBottom","gap","marginLeft","flex","itemWidth","width","undefined","display","role","defaultProps","Sections","Sorts","Windows","Loader","Dropdown","label","items","selected","onSelected","modal","useRef","useState","collapsed","setCollapsed","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","onClick","alt","src","ref","maxHeight","filter","item","map","e","preventDefault","stopPropagation","Toggle","value","onToggle","data-testid","Api","section","sort","window","page","showViral","api","get","res","data","id","axios","create","baseURL","headers","dataInitState","images","Hot","Viral","Day","isLoading","error","dataSlice","createSlice","name","initialState","reducers","state","action","payload","nextPage","fetchStarted","fetchDone","wipe","fetchError","actions","fetchData","dispatch","getState","a","getImages","console","log","message","fetchNextPage","selectDataStore","selectFilters","Toolbar","useSelector","useDispatch","Top","User","changeSection","Week","Month","Year","All","changeWindow","Time","Rising","changeSort","toggleViral","Tile","media","title","inViewport","forwardedRef","scaledHeight","height","ratioHeight","Math","floor","mediaKey","min","mp4","autoPlay","loop","playsInline","muted","type","link","visibility","TileVP","handleViewport","rootMargin","Home","columnCount","setColumnCount","history","useHistory","container","sizeListener","innerWidth","scrollListener","scrollY","clientHeight","setTimeout","tiles","img","fromHome","href","Image","location","useParams","album","goBack","find","getAlbum","fetchAlbum","controls","max-width","score","ups","downs","description","background","App","path","Boolean","hostname","match","configureStore","reducer","dataReducer","ReactDOM","render","StrictMode","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5e7b4f80.chunk.js","sourcesContent":["import React, {ComponentType, FunctionComponent} from 'react';\r\n\r\ninterface MasonryPropTypes {\r\n    columns: number,\r\n    gap: number,\r\n    itemWidth?: number,\r\n    children?: JSX.Element[],\r\n}\r\n\r\n/**\r\n * Arranges children components to the given number of columns. Items will be sorted horizontally\r\n * @param columns Number of columns\r\n * @param gap The horizontal space between columns and the vertical space between the cells inside\r\n * @param itemWidth If presented, the columns will align center with the specific width, otherwise they fill the\r\n * parent width\r\n * @param children Cells which puts inside the columns\r\n */\r\nexport const Masonry: FunctionComponent<MasonryPropTypes> = React.memo(props => {\r\n    const columnWrapper = {};\r\n    const result = [];\r\n    for (let i = 0; i < props.columns; i++) {\r\n        columnWrapper[`column${i}`] = [];\r\n    }\r\n    for (let i = 0; i < props.children.length; i++) {\r\n        const columnIndex = i % props.columns;\r\n        columnWrapper[`column${columnIndex}`].push(\r\n            <div key={i} style={{marginBottom: `${props.gap}px`}}>\r\n                {props.children[i]}\r\n            </div>\r\n        );\r\n    }\r\n    for (let i = 0; i < props.columns; i++) {\r\n        result.push(\r\n            <div\r\n                key={i}\r\n                style={{\r\n                    marginLeft: `${i > 0 ? props.gap : 0}px`,\r\n                    flex: !props.itemWidth && 1,\r\n                    width: props.itemWidth ?? undefined,\r\n                }}>\r\n                {columnWrapper[`column${i}`]}\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div style={{display: 'flex'}} role=\"grid\">\r\n            {result}\r\n        </div>\r\n    );\r\n});\r\nMasonry.defaultProps = {\r\n    columns: 2,\r\n    gap: 20,\r\n};\r\n","import React from \"react\";\r\n\r\n/**\r\n * Simple css animated loader\r\n */\r\nexport const Loader = React.memo(() => (\r\n    <div className=\"lds-ellipsis\">\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <div/>\r\n        <style jsx>\r\n            {`\r\n.lds-ellipsis {\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 80px;\r\n  height: 33px;\r\n}\r\n.lds-ellipsis div {\r\n  position: absolute;\r\n  top: 12px;\r\n  width: 13px;\r\n  height: 13px;\r\n  border-radius: 50%;\r\n  background: #fff;\r\n  animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n}\r\n.lds-ellipsis div:nth-child(1) {\r\n  left: 8px;\r\n  animation: lds-ellipsis1 0.6s infinite;\r\n}\r\n.lds-ellipsis div:nth-child(2) {\r\n  left: 8px;\r\n  animation: lds-ellipsis2 0.6s infinite;\r\n}\r\n.lds-ellipsis div:nth-child(3) {\r\n  left: 32px;\r\n  animation: lds-ellipsis2 0.6s infinite;\r\n}\r\n.lds-ellipsis div:nth-child(4) {\r\n  left: 56px;\r\n  animation: lds-ellipsis3 0.6s infinite;\r\n}\r\n@keyframes lds-ellipsis1 {\r\n  0% {\r\n    transform: scale(0);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n@keyframes lds-ellipsis3 {\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    transform: scale(0);\r\n  }\r\n}\r\n@keyframes lds-ellipsis2 {\r\n  0% {\r\n    transform: translate(0, 0);\r\n  }\r\n  100% {\r\n    transform: translate(24px, 0);\r\n  }\r\n}\r\n\r\n                `}\r\n        </style>\r\n    </div>\r\n));","export enum Sections {Hot = 'hot', Top = 'top', User = 'user'}\r\n\r\nexport enum Sorts {Viral = 'viral', Top = 'top', Time = 'time', Rising = 'rising'}\r\n\r\nexport enum Windows {Day = 'day', Week = 'week', Month = 'month', Year = 'year', All = 'all'}","import React, {FunctionComponent, useEffect, useRef, useState} from \"react\";\r\n\r\ninterface DropdownPropTypes {\r\n    label: string;\r\n    items: string[];\r\n    selected: string;\r\n    onSelected: (item: string) => void;\r\n}\r\n\r\n/**\r\n * Simple dropdown to select an item inside a string array\r\n * @param label Label of the dropdown that places beside the items\r\n * @param items Array of options\r\n * @param selected Current selected option inside the items\r\n * @param onSelected Callback function which returns the selected option\r\n */\r\nexport const Dropdown: FunctionComponent<DropdownPropTypes> = ({label, items, selected, onSelected}) => {\r\n    const modal = useRef();\r\n    const [collapsed, setCollapsed] = useState(true);\r\n    useEffect(() => {\r\n        function handleClickOutside(event) {\r\n            // @ts-ignore\r\n            if (modal.current && !modal.current.contains(event.target)) {\r\n                setCollapsed(true);\r\n            }\r\n        }\r\n\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [modal]);\r\n\r\n    function onClick(e, item) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setCollapsed(!collapsed);\r\n        onSelected(item);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <span onClick={() => setCollapsed(!collapsed)}>\r\n                {label && <span className=\"label\">{label}: </span>}\r\n                {selected}\r\n                <img\r\n                    alt=\"down-icon\"\r\n                    width=\"14px\"\r\n                    src=\"https://www.artcologne.com/media/system/img/icons/icon_chevron_down_light_H7.svg\"/>\r\n            </span>\r\n            <div\r\n                ref={modal}\r\n                className=\"modal\"\r\n                style={{maxHeight: collapsed ? 0 : items.length * 40}}>\r\n                {items.filter(item => item !== selected).map(label => {\r\n                    return (\r\n                        <span key={label} className=\"items\" onClick={e => onClick(e, label)}>\r\n                            {label}\r\n                        </span>\r\n                    );\r\n                })}\r\n            </div>\r\n            <style jsx>\r\n                {`\r\n                    div {\r\n                        position: relative;\r\n                    }\r\n                    div.modal {\r\n                        display: flex;\r\n                        flex-flow: column;\r\n                        position: absolute;\r\n                        top: 100%;\r\n                        right: 0;\r\n                        background: #3A435E;\r\n                        border-radius: 5px;\r\n                        margin-left: 10px;\r\n                        transition: max-height 0.2s;\r\n                        transition-timing-function: ease-in-out;\r\n                        overflow: hidden;\r\n                        z-index: 100;\r\n                        margin-top: 0.2em;\r\n                    }\r\n                    span {\r\n                        color: white;\r\n                        font-size: 1.2em;\r\n                        text-transform: capitalize;\r\n                        cursor: pointer;\r\n                        user-select: none;\r\n                    }\r\n                    span.label {\r\n                        font-size: 0.9em;\r\n                        font-weight: 100;\r\n                        opacity: 0.3;\r\n                    }\r\n                    span > img {\r\n                        margin-left: 5px;\r\n                    }\r\n                    span.items {\r\n                        font-weight: normal;\r\n                        opacity: 0.6;\r\n                        font-size: 1.2em;\r\n                        padding: 10px 26px 0 10px;\r\n                        font-weight: normal;\r\n                    }\r\n                    span.items :last-child {\r\n                        padding-bottom: 10px;\r\n                    }\r\n                    span.items :hover {\r\n                        opacity: 1;\r\n                    }\r\n                `}\r\n            </style>\r\n        </div>\r\n    );\r\n};\r\n\r\n// const styles = {\r\n//     div: {\r\n//         display: 'flex',\r\n//         width: 200\r\n//     },\r\n//     span: {\r\n//         // display: 'inline-block',\r\n//         transition: 'flex 2s',\r\n//         flex: 1,\r\n//         color: 'white',\r\n//         fontSize: '1.4em',\r\n//         fontWeight: 'bold',\r\n//         textTransform: 'capitalize',\r\n//         marginRight: 16,\r\n//     },\r\n//     spanDeactive: {\r\n//         opacity: 0,\r\n//         flex: 0,\r\n//     },\r\n//\r\n// };","import React, {FunctionComponent} from \"react\";\r\n\r\ninterface TogglePropTypes {\r\n    label: string;\r\n    value: boolean;\r\n    onToggle: (arg: boolean) => void;\r\n}\r\n\r\n/**\r\n * Simple component to control boolean values\r\n * @param label Text that shows beside the toggle switch\r\n * @param value Current boolean value\r\n * @param onToggle Callback which calls based on user click and returns inverted state of current value\r\n */\r\nexport const Toggle: FunctionComponent<TogglePropTypes> = React.memo(({label, value, onToggle}) => (\r\n    <div>\r\n        <span>\r\n            {label && <span className=\"label\">{label}: </span>}\r\n        </span>\r\n        <div data-testid=\"toggle\" className=\"place\" onClick={() => onToggle(!value)}>\r\n            <div className=\"handle\"/>\r\n        </div>\r\n        <style jsx>\r\n            {`\r\nspan {\r\n    color: white;\r\n    font-size: 1.2em;\r\n    text-transform: capitalize;\r\n    cursor: pointer;\r\n    user-select: none;\r\n}\r\nspan.label {\r\n    font-size: 0.9em;\r\n    font-weight: 100;\r\n    opacity: 0.3;\r\n}\r\n.place {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: 40px;\r\n    height: 20px;\r\n    background-color: #00000044;\r\n    border-radius: 8px;\r\n    margin-bottom: -4px;\r\n    cursor: pointer;\r\n}\r\n.handle {\r\n    content: \"\",\r\n    display: inline-block;\r\n    position: absolute;\r\n    background-color: ${value ? '#BEB8EB' : '#ffffff33'};\r\n    top: 1px;\r\n    left: ${value ? '21px' : '1px'};\r\n    width: 18px;\r\n    height: 18px;\r\n    border-radius: 7px;\r\n    transition: left 0.2s;\r\n}\r\n                `}\r\n        </style>\r\n    </div>\r\n));\r\n","import axios from 'axios'\r\n\r\nexport default class Api {\r\n    static api = axios.create({\r\n        baseURL: 'https://api.imgur.com/3',\r\n        headers: {\r\n            'Authorization': 'Client-ID b7a38f5989011ba'\r\n        }\r\n    });\r\n\r\n    static async getImages({section, sort, window, page, showViral}) {\r\n        const res = await Api.api.get(`/gallery/${section}/${sort}/${window}/${page}?showViral=${showViral}`);\r\n        return res.data.data;\r\n    }\r\n\r\n    static async getAlbum(id) {\r\n        const res = await Api.api.get(`/gallery/album/${id}`);\r\n        return res.data.data;\r\n    }\r\n}","import {createSlice} from \"@reduxjs/toolkit\";\r\nimport {Sections, Sorts, Windows} from \"./enums\";\r\nimport Api from \"../../services/api\";\r\nimport {Album} from \"../../models/Album\";\r\n\r\ninterface DataStore {\r\n    images: Album[],\r\n    section: Sections,\r\n    sort: Sorts,\r\n    window: Windows,\r\n    showViral: boolean,\r\n    page: number,\r\n    isLoading: boolean,\r\n    error: string,\r\n}\r\n\r\nexport const dataInitState: DataStore = {\r\n    images: [],\r\n    section: Sections.Hot,\r\n    sort: Sorts.Viral,\r\n    window: Windows.Day,\r\n    showViral: true,\r\n    page: 0,\r\n    isLoading: true,\r\n    error: null,\r\n};\r\n\r\nexport const dataSlice = createSlice({\r\n    name: 'data',\r\n    initialState: dataInitState,\r\n    reducers: {\r\n        filter: (state, action) => {\r\n            const {section, sort, window, showViral} = action.payload;\r\n            state.page = 0;\r\n            state.section = section || state.section;\r\n            state.sort = sort || state.sort;\r\n            state.window = window || state.window;\r\n            state.showViral = showViral !== undefined ?\r\n                showViral : state.showViral;\r\n        },\r\n        nextPage: state => {\r\n            state.page++;\r\n        },\r\n        fetchStarted: state => {\r\n            state.isLoading = true;\r\n        },\r\n        fetchDone: (state, action) => {\r\n            state.isLoading = false;\r\n            if (action.payload.wipe)\r\n                state.images = action.payload.data;\r\n            else\r\n                state.images.push(...action.payload.data);\r\n        },\r\n        fetchError: (state, action) => {\r\n            state.isLoading = false;\r\n            state.error = action.payload;\r\n        },\r\n    },\r\n});\r\nexport const {filter, nextPage, fetchStarted, fetchDone, fetchError} = dataSlice.actions;\r\n\r\nexport const fetchData = (wipe = true) => {\r\n    return async (dispatch, getState) => {\r\n        const {data} = getState();\r\n        dispatch(fetchStarted());\r\n        try {\r\n            let images = await Api.getImages(data);\r\n            dispatch(fetchDone({wipe, data: images}));\r\n        } catch (e) {\r\n            console.log(e);\r\n            dispatch(fetchError(e.message));\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchAlbum = (id) => {\r\n    return async (dispatch, getState) => {\r\n        const {data: {images}} = getState();\r\n        if (images.find(img => img.id === id)) return;\r\n        dispatch(fetchStarted());\r\n        try {\r\n            let album = await Api.getAlbum(id);\r\n            dispatch(fetchDone({wipe: false, data: [album]}));\r\n        } catch (e) {\r\n            console.log(e);\r\n            dispatch(fetchError(e.message));\r\n        }\r\n    };\r\n};\r\n\r\nexport const fetchNextPage = () => {\r\n    return async (dispatch) => {\r\n        dispatch(nextPage());\r\n        await dispatch(fetchData(false));\r\n    };\r\n};\r\n\r\nexport const changeSection = (section) => {\r\n    return async (dispatch) => {\r\n        dispatch(filter({section}));\r\n        await dispatch(fetchData());\r\n    };\r\n};\r\n\r\nexport const changeSort = (sort) => {\r\n    return async (dispatch) => {\r\n        dispatch(filter({sort}));\r\n        await dispatch(fetchData());\r\n    };\r\n};\r\n\r\nexport const changeWindow = (window) => {\r\n    return async (dispatch) => {\r\n        dispatch(filter({window}));\r\n        await dispatch(fetchData());\r\n    };\r\n};\r\n\r\nexport const toggleViral = (showViral) => {\r\n    return async (dispatch) => {\r\n        dispatch(filter({showViral}));\r\n        await dispatch(fetchData());\r\n    };\r\n};\r\n\r\nexport const selectDataStore = state => state.data;\r\n\r\nexport const selectFilters = state => {\r\n    const {data: {images, error, isLoading, page, ...rest}} = state;\r\n    return rest;\r\n};\r\n\r\nexport default dataSlice.reducer;","import React, {FunctionComponent} from \"react\";\r\nimport {Dropdown} from \"../../components/Dropdown\";\r\nimport {Sections, Sorts, Windows} from \"./enums\";\r\nimport {Toggle} from \"../../components/Toggle\";\r\nimport {changeSection, changeSort, changeWindow, selectFilters, toggleViral} from \"./dataSlice\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nexport const Toolbar: FunctionComponent = () => {\r\n    const {section, window, sort, showViral} = useSelector(selectFilters);\r\n    const dispatch = useDispatch();\r\n\r\n    return <div>\r\n        <Dropdown\r\n            label=\"Section\"\r\n            items={[Sections.Hot, Sections.Top, Sections.User]}\r\n            selected={section}\r\n            onSelected={section => dispatch(changeSection(section))}\r\n        />\r\n        <div className=\"space\"/>\r\n        <Dropdown\r\n            label=\"Window\"\r\n            items={[Windows.Day, Windows.Week, Windows.Month, Windows.Year, Windows.All]}\r\n            selected={window}\r\n            onSelected={window => dispatch(changeWindow(window))}\r\n        />\r\n        <div className=\"space\"/>\r\n        <Dropdown\r\n            label=\"Sort\"\r\n            items={[Sorts.Viral, Sorts.Top, Sorts.Time, Sorts.Rising]}\r\n            selected={sort}\r\n            onSelected={sort => dispatch(changeSort(sort))}\r\n        />\r\n        <div className=\"space\"/>\r\n        <Toggle\r\n            label=\"Show viral\"\r\n            value={showViral}\r\n            onToggle={state => dispatch(toggleViral(state))}\r\n        />\r\n        <style jsx>\r\n            {`\r\n                div {\r\n                    display: flex;\r\n                    flex-flow: row;\r\n                    padding: 0.5em 2em 0.5em 0;\r\n                }\r\n                div > * { \r\n                    margin-right: 16px;\r\n                }\r\n                .space {\r\n                    width: 20px;\r\n                }\r\n            `}\r\n        </style>\r\n    </div>\r\n}\r\n","import React, {Fragment, FunctionComponent, useRef} from \"react\";\r\nimport {AlbumImage} from \"../models/Album\";\r\n\r\nexport interface TilePropTypes {\r\n    width: number;\r\n    media: AlbumImage;\r\n    title: string;\r\n    onClick: () => void;\r\n    inViewport?: any;\r\n    forwardedRef?: any;\r\n}\r\n\r\n/**\r\n * Visual component which represents an image or video with title. It can have a specific width and resize the\r\n * image or video proportionally to the given width. Also it makes sure the height of the cell won't exceed 16x9 ratio\r\n * @param width Static width of the component\r\n * @param media Data of the media which represents\r\n * @param title Title of the component\r\n * @param onClick Callback for user click event\r\n * @param inViewport This value will pass automatically through HOC\r\n * @param forwardRef This value will pass automatically through HOC\r\n */\r\nexport const Tile: FunctionComponent<TilePropTypes> = React.memo((props) => {\r\n    const {width, media, title, onClick, inViewport, forwardedRef} = props;\r\n    const scaledHeight = media.height * width / media.width;\r\n    const ratioHeight = Math.floor(width * (16 / 9));\r\n    const mediaKey = useRef();\r\n    return (\r\n        <div\r\n            ref={forwardedRef}\r\n            className=\"card\"\r\n            role=\"gridcell\"\r\n            onClick={onClick}\r\n        >\r\n            {inViewport ?\r\n                <Fragment>\r\n                    <div className=\"media loader\">\r\n                        <div className=\"loader\"/>\r\n                        {media.mp4 ?\r\n                            <video\r\n                                ref={mediaKey}\r\n                                autoPlay\r\n                                loop\r\n                                playsInline\r\n                                muted\r\n                                width={width}\r\n                                // onLoadedData={e => setLoader(false)}\r\n                            >\r\n                                >\r\n                                <source type=\"video/mp4\" src={media.mp4}/>\r\n                            </video> :\r\n                            <img\r\n                                ref={mediaKey}\r\n                                alt={media.title}\r\n                                src={media.link}\r\n                                width={width}\r\n                                // onLoadedData={e => setLoader(false)}\r\n                            />}\r\n                    </div>\r\n                    <div className=\"desc\"><h4>{title}</h4></div>\r\n                </Fragment> :\r\n                <Fragment>\r\n                    <div className=\"media\"/>\r\n                    <div style={{visibility: 'hidden'}} className=\"desc\"><h4>{title}</h4></div>\r\n                </Fragment>\r\n            }\r\n            <style jsx>\r\n                {`\r\n                    @keyframes Loader {\r\n                        0%{background-position:50% 0%}\r\n                        50%{background-position:50% 100%}\r\n                        100%{background-position:50% 0%}\r\n                    }\r\n                    .loader {\r\n                        background: linear-gradient(180deg, #5c6672, #3a435e);\r\n                        background-size: 400% 400%;\r\n                        animation: Loader 4s ease infinite;\r\n                    }\r\n                    .card { \r\n                        display: flex;\r\n                        flex-flow: column;\r\n                        border-radius: 5px;\r\n                        box-shadow: 0 3px 3px -1px rgba(0,0,0,0.2);\r\n                        text-decoration: none;\r\n                        overflow: hidden;\r\n                        background: #3A435E;\r\n                        cursor: pointer;\r\n                    }\r\n                    div.media {\r\n                        \r\n                        height: ${Math.min(scaledHeight, ratioHeight)}px;\r\n                    }\r\n                    div.desc {\r\n                        display: flex;\r\n                        background-color: #534b52;\r\n                    }\r\n                    h4 {\r\n                        color: white;\r\n                        margin: 1em;\r\n                    }\r\n                `}\r\n            </style>\r\n        </div>\r\n    );\r\n});\r\n","import {FunctionComponent} from \"react\";\r\nimport {Tile, TilePropTypes} from \"./Tile\";\r\nimport handleViewport from 'react-in-viewport';\r\n\r\n/**\r\n * Wrapped version of Tile component which promote viewport features\r\n */\r\nconst TileVP: FunctionComponent<TilePropTypes> = handleViewport(Tile, {rootMargin: '500.0px'});\r\nexport default TileVP;\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {Masonry} from \"../components/Masonry\";\r\nimport {Loader} from \"../components/Loader\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Toolbar} from \"../features/data/Toolbar\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchData, fetchNextPage, selectDataStore} from \"../features/data/dataSlice\";\r\nimport TileVP from \"../components/TileVP\";\r\n\r\nexport default function Home() {\r\n    const {images, isLoading} = useSelector(selectDataStore);\r\n    const dispatch = useDispatch();\r\n    const [columnCount, setColumnCount] = useState(3);\r\n    const history = useHistory();\r\n    const container = useRef();\r\n    useEffect(() => {\r\n        dispatch(fetchData());\r\n\r\n        function sizeListener() {\r\n            if (window.innerWidth > 1700)\r\n                setColumnCount(6);\r\n            else if (window.innerWidth > 1400)\r\n                setColumnCount(5);\r\n            else if (window.innerWidth > 1100)\r\n                setColumnCount(4);\r\n            else if (window.innerWidth > 840)\r\n                setColumnCount(3);\r\n            else if (window.innerWidth > 570)\r\n                setColumnCount(2);\r\n            else\r\n                setColumnCount(1);\r\n        }\r\n\r\n        async function scrollListener() {\r\n            // @ts-ignore\r\n            if (window.scrollY > container?.current?.clientHeight * 0.7) {\r\n                window.removeEventListener('scroll', scrollListener);\r\n                await dispatch(fetchNextPage());\r\n                setTimeout(() => {\r\n                    window.addEventListener('scroll', scrollListener);\r\n                }, 10000);\r\n            }\r\n        }\r\n\r\n        sizeListener();\r\n        window.addEventListener('resize', sizeListener);\r\n        window.addEventListener('scroll', scrollListener);\r\n\r\n        return function cleanup() {\r\n            window.removeEventListener('resize', sizeListener);\r\n            window.removeEventListener('scroll', scrollListener);\r\n        }\r\n    }, []);\r\n    // console.log(images);\r\n    const tiles = [];\r\n    for (const img of images) {\r\n        if (!img.images || img.images.length === 0) continue;\r\n        tiles.push(\r\n            <TileVP\r\n                key={img.id}\r\n                media={img.images[0]}\r\n                width={240}\r\n                title={img.title}\r\n                onClick={() => history.push('image/' + img.id, {fromHome: true})}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div ref={container} className=\"container\" id=\"content\">\r\n            <main>\r\n                <h1 className=\"title\">\r\n                    Browse the <a href=\"https://imgur.com/\">Imgur</a> simply!\r\n                </h1>\r\n\r\n                <p className=\"description\">\r\n                    Developed by <a href=\"https://hamedi.io/\">Hamed Hamedi</a>\r\n                </p>\r\n                <div className=\"toolbarWrapper\">\r\n                </div>\r\n                <div className=\"grid\">\r\n                    <div className=\"tools\">\r\n                        <Toolbar/>\r\n                        {isLoading && <Loader/>}\r\n                    </div>\r\n                    <Masonry columns={columnCount} gap={15} itemWidth={240}>\r\n                        {tiles}\r\n                    </Masonry>\r\n                </div>\r\n            </main>\r\n            <footer>\r\n                {isLoading && <Loader/>}\r\n            </footer>\r\n\r\n            <style jsx>{`\r\n            \r\n        .container {\r\n          min-height: 100vh;\r\n          padding: 0 0.5rem;\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: center;\r\n          align-items: center;\r\n        }\r\n\r\n        main {\r\n          padding: 5rem 0;\r\n          flex: 1;\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: center;\r\n          align-items: center;\r\n        }\r\n\r\n        footer {\r\n          width: 100%;\r\n          height: 100px;\r\n          border-top: .1px solid #eaeaea;\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n        }\r\n\r\n        footer a {\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n        }\r\n\r\n        a {\r\n          color: inherit;\r\n          text-decoration: none;\r\n        }\r\n\r\n        .title a {\r\n          color: #BEB8EB;\r\n          text-decoration: none;\r\n        }\r\n\r\n        .title a:hover,\r\n        .title a:focus,\r\n        .title a:active {\r\n          text-decoration: underline;\r\n        }\r\n\r\n        .title {\r\n          color: #ffffffc7;\r\n          margin: 0;\r\n          line-height: 1.15;\r\n          font-size: 4rem;\r\n        }\r\n\r\n        .title,\r\n        .description {\r\n          text-align: center;\r\n        }\r\n        \r\n        .description {\r\n            color: #455561;\r\n        }\r\n        \r\n        .description a {\r\n            color: #BEB8EB;\r\n        }\r\n\r\n        .description {\r\n          line-height: 1.5;\r\n          font-size: 1.5rem;\r\n        }\r\n\r\n        .grid {\r\n          display: block;\r\n          // max-width: 1000px;\r\n          padding: 0 2em;\r\n          margin-top: 0.5em;\r\n        }\r\n\r\n        .tools {\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n        }\r\n\r\n        @media (max-width: 600px) {\r\n          .grid, .toolbarWrapper {\r\n            width: 100%;\r\n            flex-direction: column;\r\n          }\r\n        }\r\n      `}</style>\r\n\r\n            <style jsx global>\r\n                {`\r\n        html,\r\n        body {\r\n          background-color: #2A2D34;\r\n          padding: 0;\r\n          margin: 0;\r\n          font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,\r\n            Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue,\r\n            sans-serif;\r\n        }\r\n\r\n        * {\r\n          box-sizing: border-box;\r\n        }\r\n      `}\r\n            </style>\r\n        </div>\r\n    )\r\n}","import React, {Fragment, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {fetchAlbum, selectDataStore} from \"../features/data/dataSlice\";\r\n\r\n\r\nexport default function Image() {\r\n    const {images, isLoading} = useSelector(selectDataStore);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const history = useHistory();\r\n    const {location: {state}} = history;\r\n    let {id} = useParams();\r\n    const album = images.filter(img => img.id === id)[0];\r\n\r\n    function goBack() {\r\n        if (state?.fromHome)\r\n            history.goBack();\r\n        else\r\n            history.push(\"/\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchAlbum(id));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {(!album) ?\r\n\r\n                <Fragment>\r\n                    <main>\r\n                        <div className=\"back\" onClick={goBack}>\r\n                            {'<'} Home\r\n                        </div>\r\n                        <div className=\"grid\" style={{height: '50vh'}}>\r\n                            <div className=\"loader media\" style={{flex: 1}}>\r\n                            </div>\r\n                            <div className=\"details\">\r\n                                <h2 className=\"loader\" style={{width: '70%', height: 40, background: '#ffffff55'}}/>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </Fragment>\r\n                :\r\n                <Fragment>\r\n                    <main>\r\n                        <div className=\"back\" onClick={goBack}>\r\n                            {'<'} Home\r\n                        </div>\r\n                        <div className=\"grid\">\r\n                            <div className=\"media\">\r\n                                {album.images[0].mp4 ?\r\n                                    <video\r\n                                        autoPlay\r\n                                        loop\r\n                                        playsInline\r\n                                        controls\r\n                                        max-width=\"100%\"\r\n                                        style={{maxHeight: '100vh'}}\r\n                                    >\r\n                                        <source type=\"video/mp4\" src={album.images[0].mp4}/>\r\n                                    </video> :\r\n                                    <img width=\"100%\" src={album.images[0].link} alt={album.title}/>\r\n                                }\r\n                            </div>\r\n                            <div className=\"details\">\r\n                                <h2>{album.title}</h2>\r\n                                <span style={{width: 20}}/>\r\n                                <div className=\"scores\">\r\n                                    <div className=\"updown\">\r\n                                        <span><span className=\"type\">SCORE</span> {album.score}</span>\r\n                                        <span style={{width: 20}}/>\r\n                                        <span><span className=\"type\">&#8679;</span> {album.ups}</span>\r\n                                        <span style={{width: 20}}/>\r\n                                        <span><span className=\"type\">&#8681;</span> {album.downs}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"desc\">{album.description || \"No description\"}</div>\r\n                        </div>\r\n                    </main>\r\n                </Fragment>}\r\n            <style jsx>{`        \r\n            \r\n\r\n@keyframes AnimationName {\r\n    0%{background-position:0% 50%}\r\n    50%{background-position:200% 50%}\r\n    100%{background-position:0% 50%}\r\n}\r\n.loader {\r\n    background: linear-gradient(180deg, #534b52, #ffffff);\r\n    background-size: 400% 400%;\r\n    animation: AnimationName 3s ease infinite;\r\n}\r\n.container {\r\n    min-height: 100vh;\r\n    padding: 0 0.5rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\nmain {\r\n  padding: 5rem 0;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n}\r\n\r\n.back{\r\n    font-size: 2em;\r\n    color: white;\r\n    margin-bottom: 2em;\r\n    user-select: none;\r\n    cursor: pointer;\r\n    align-self: flex-start;\r\n}\r\n\r\n.grid {\r\n    display: flex;\r\n    flex-flow: column;\r\n    align-items: center;\r\n    max-width: 1000px;\r\n    min-width: 70vw;\r\n    padding: 0 2em;\r\n    margin-top: 0.5em;\r\n}\r\n\r\n.media {\r\n    display: flex;\r\n    width:100%;\r\n    justify-content: center;\r\n    background-color: #534B52;\r\n}\r\n\r\nh2 {\r\n    color: white;\r\n    margin: 0;\r\n}\r\n\r\n.details {\r\n    display: flex;\r\n    width: 100%;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    align-items: flex-start;\r\n    margin: 1em 0;\r\n}\r\n\r\n\r\n.scores {\r\n    color: white;\r\n    display: flex;\r\n    flex-flow: column;\r\n    align-items: flex-end;\r\n}\r\n\r\n.updown {\r\n    font-size: 1.4em;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.updown .type {\r\n    font-weight: 100;\r\n    color: #455561;\r\n}\r\n\r\n.score .num {\r\n    font-size: 2em;\r\n    font-weight: 600;\r\n}\r\n\r\n.desc {\r\n    color: white;\r\n    width: 100%;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n    .grid {\r\n        width: 100%;\r\n        flex-direction: column;\r\n        min-width: none;\r\n    }\r\n}\r\n            `}</style>\r\n            <style jsx global>\r\n                {`\r\nhtml,\r\nbody {\r\n  background-color: #2A2D34;\r\n  padding: 0;\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,\r\n    Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue,\r\n    sans-serif;\r\n}\r\n\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n                `}\r\n            </style>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Home from \"./pages/Home\";\r\nimport Image from \"./pages/Image\";\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport ScrollMemory from 'react-router-scroll-memory';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <ScrollMemory />\r\n            <Switch>\r\n                <Route path=\"/image/:id\">\r\n                    <Image />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <Home />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport dataReducer from '../features/data/dataSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        data: dataReducer,\r\n    },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport store from './app/store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}